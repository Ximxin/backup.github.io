<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ximxin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.xmxin.top/"/>
  <updated>2017-10-13T11:11:01.000Z</updated>
  <id>http://blog.xmxin.top/</id>
  
  <author>
    <name>Ximxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS6 or 7下部署vsftpd服务器</title>
    <link href="http://blog.xmxin.top/2017/10/13/CentOS6%20or%207%E9%83%A8%E7%BD%B2vsftpd%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.xmxin.top/2017/10/13/CentOS6 or 7部署vsftpd服务器/</id>
    <published>2017-10-13T09:54:04.000Z</published>
    <updated>2017-10-13T11:11:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、首先安装vsftpd服务并安装需要的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y vsftpd passwd</div></pre></td></tr></table></figure><p>2、创建用户并设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">useradd -g root -M -d web根目录 -s /sbin/nologin FTP用户名</div><div class="line">passwd FTP用户名</div><div class="line"><span class="comment">#接着输入两次FTP用户的密码</span></div></pre></td></tr></table></figure></p><p>3、修改web根目录权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R FTP用户名:root web根目录</div></pre></td></tr></table></figure></p><p>4、配置vsftpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">vi /etc/pam.d/vsftpd <span class="comment">#编辑/etc/pam.d/vsftpd</span></div><div class="line"></div><div class="line"><span class="comment">#添加如下内容，输入一个'i'即可对文件进行编辑</span></div><div class="line">auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</div><div class="line">account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser_passwd</div><div class="line">:wq <span class="comment">#保存并退出</span></div><div class="line"></div><div class="line"><span class="comment">#在vsftpd添加用户和密码</span></div><div class="line">vi /etc/vsftpd/vuser_passwd.txt <span class="comment">#编辑/etc/vsftpd/vuser_passwd.txt</span></div><div class="line"></div><div class="line"><span class="comment">#在里面添加你的ftp用户和密码，如:</span></div><div class="line">ftpuser</div><div class="line">ftppass</div><div class="line"></div><div class="line"><span class="comment">#切换到/etc/vsftpd目录生成db文件</span></div><div class="line"><span class="built_in">cd</span> /etc/vsftpd</div><div class="line">db_load -T -t <span class="built_in">hash</span> -f vuser_passwd.txt vuser_passwd.db</div><div class="line"></div><div class="line"><span class="comment">#创建一个/etc/vsftpd/vsftpd_conf目录</span></div><div class="line">mkdir /etc/vsftpd/vsftpd_conf</div><div class="line"></div><div class="line"><span class="comment">#在创建好的目录中添加一个FTP用户的配置文件，文件名为你的FTP用户名</span></div><div class="line">vi /etc/vsftpd/vsftpd_conf/FTP用户名 <span class="comment">#我们直接编辑一个文件</span></div><div class="line"></div><div class="line"><span class="comment">#接着添加如下内容:</span></div><div class="line">local_root=你的Web根目录</div><div class="line">write_enable=YES</div><div class="line">anon_umask=022</div><div class="line">anon_world_readable_only=NO</div><div class="line">anon_upload_enable=YES</div><div class="line">anon_mkdir_write_enable=YES</div><div class="line">anon_other_write_enable=YES</div><div class="line"></div><div class="line"><span class="comment">#接着再添加一个pcvc文件</span></div><div class="line">vi /etc/vsftpd/vsftpd_conf/pcvc <span class="comment">#和上面一样直接编辑一个pcvc文件</span></div><div class="line"></div><div class="line"><span class="comment">#在pcvc文件中添加如下内容:</span></div><div class="line">local_root=/var/www/pcvcnet</div><div class="line">write_enable=YES</div><div class="line">anon_umask=022</div><div class="line">anon_world_readable_only=NO</div><div class="line">anon_upload_enable=YES</div><div class="line">anon_mkdir_write_enable=YES</div><div class="line">anon_other_write_enable=YES</div><div class="line"></div><div class="line"><span class="comment">#都完成后就可以编辑vsftpd的配置文件了</span></div><div class="line">rm -rf /etc/vsftpd/vsftpd.conf <span class="comment">#删除默认配置文件</span></div><div class="line">vi /etc/vsftpd/vsftpd.conf <span class="comment">#然后我们直接编辑一个vsftpd配置文件</span></div><div class="line"></div><div class="line"><span class="comment">#在文件里面添加如下内容:</span></div><div class="line">anonymous_enable=YES</div><div class="line">local_enable=YES</div><div class="line">write_enable=YES</div><div class="line">local_umask=022</div><div class="line">dirmessage_enable=YES</div><div class="line">xferlog_enable=YES</div><div class="line">connect_from_port_20=YES</div><div class="line">xferlog_std_format=YES</div><div class="line">ascii_upload_enable=YES</div><div class="line">ascii_download_enable=YES</div><div class="line">chroot_local_user=YES</div><div class="line">listen=NO</div><div class="line">listen_ipv6=YES</div><div class="line">pam_service_name=vsftpd</div><div class="line">userlist_enable=YES</div><div class="line">tcp_wrappers=YES</div><div class="line">guest_enable=YES</div><div class="line">guest_username=ftpuser</div><div class="line">user_config_dir=/etc/vsftpd/vuser_conf</div><div class="line"></div><div class="line"><span class="comment">#如果是CentOS7需要在里面继续添加一行</span></div><div class="line">allow_writeable_chroot=YES</div></pre></td></tr></table></figure></p><p>到此vsftpd就配置完成了</p><p>5、配置或关闭防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#CentOS6关闭防火墙:</span></div><div class="line">service iptables stop</div><div class="line">chkconfig iptables off</div><div class="line"></div><div class="line"><span class="comment">#CentOS7关闭防火墙:</span></div><div class="line">systemctl stop firewalld</div><div class="line">systemctl <span class="built_in">disable</span> firewalld</div><div class="line"></div><div class="line"><span class="comment">#CentOS6配置防火墙:</span></div><div class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT</div><div class="line">service iptables save</div><div class="line">service iptables restart</div><div class="line"></div><div class="line"><span class="comment">#CentOS7配置防火墙:</span></div><div class="line">firewall-cmd --zone=public --add-port=21/tcp --permanent</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure></p><p>6、启动vsftpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#CentOS6:</span></div><div class="line">service vsftpd start <span class="comment">#启动</span></div><div class="line">chkconfig vsftpd on <span class="comment">#设置开机自启</span></div><div class="line"></div><div class="line"><span class="comment">#CentOS7:</span></div><div class="line">systemctl start vsftpd <span class="comment">#启动</span></div><div class="line">systemctl <span class="built_in">enable</span> vsftpd <span class="comment">#设置开机自启</span></div></pre></td></tr></table></figure></p><p>到此vsftpd的部署就全部结束了，觉得写得不错的朋友不要忘记打赏哦!(≧∇≦)/</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;1、首先安装vsftpd服务并安装需要的插件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些简单的Shell脚本</title>
    <link href="http://blog.xmxin.top/2017/08/18/%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84Shell%E8%84%9A%E6%9C%AC/"/>
    <id>http://blog.xmxin.top/2017/08/18/一些简单的Shell脚本/</id>
    <published>2017-08-18T02:19:10.000Z</published>
    <updated>2017-08-18T02:31:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>一键SeVPN WEB流控版<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget vpn.xmxin.top/SeVPN_1.1.sh;bash SeVPN_1.1.sh <span class="comment">#1.1版本</span></div><div class="line">wget vpn.xmxin.top/SeVPN_3.0.sh;bash SeVPN_3.0.sh <span class="comment">#3.0版本</span></div></pre></td></tr></table></figure></p><p>一键gzexe+shc加密脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget vpn.xmxin.top/JiaMi.sh;bash JiaMi.sh</div></pre></td></tr></table></figure></p><p>一键安装GLIBC_2.14脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget vpn.xmxin.top/GLIBC_2.14.sh;bash GLIBC_2.14.sh</div></pre></td></tr></table></figure></p><p>更多实用脚本尽在<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget vpn.xmxin.top/Xmxind.sh;bash Xmxind.sh</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一键SeVPN WEB流控版&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一个表白源码~</title>
    <link href="http://blog.xmxin.top/2017/08/14/%E4%B8%80%E4%B8%AA%E8%A1%A8%E7%99%BD%E6%BA%90%E7%A0%81/"/>
    <id>http://blog.xmxin.top/2017/08/14/一个表白源码/</id>
    <published>2017-08-14T03:27:59.000Z</published>
    <updated>2017-08-14T03:39:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个用jQuery+Html5实现的唯美动画表白源码。</p><p>下载代码:  <a href="http://blog.xmxin.top/shili/">网页实例</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/Shell-mirrors/<span class="keyword">for</span>-you-love.git</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;一个用jQuery+Html5实现的唯美动画表白源码。&lt;/p&gt;
&lt;p&gt;下载代码:  &lt;a href=&quot;http://blog.xmxin.top/shili/&quot;&gt;网页实例&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux下使用iptables和tc限制单个ip下载速度</title>
    <link href="http://blog.xmxin.top/2017/07/02/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8iptables%E5%92%8Ctc%E9%99%90%E5%88%B6%E5%8D%95%E4%B8%AAip%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6/"/>
    <id>http://blog.xmxin.top/2017/07/02/Linux下使用iptables和tc限制单个ip下载速度/</id>
    <published>2017-07-02T10:57:22.000Z</published>
    <updated>2017-07-02T12:03:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>linux下使用iptables和tc限制速度的方法，记录一下。假设本地搭建了PPTPD服务，又或者有多个网卡，需要对其中一些接口做限速处理的情况，非常有用，本文基于CentOS 6.4 64bit。</p><h3 id="1、初始配置"><a href="#1、初始配置" class="headerlink" title="1、初始配置"></a>1、初始配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysctl.conf</div><div class="line"><span class="comment">#找到net.ipv4.ip_forward = 0修改net.ipv4.ip_forward = 1;没有就添加一行。</span></div><div class="line">sysctl -p</div><div class="line"> </div><div class="line"><span class="comment">#清除原来的mangle表规则</span></div><div class="line">iptables -t mangle -F</div><div class="line"> </div><div class="line"><span class="comment">#加载sch_htb模块</span></div><div class="line">modprobe sch_htb</div><div class="line"><span class="built_in">echo</span> <span class="string">"modprobe sch_htb"</span> &gt;&gt; /etc/rc.local</div></pre></td></tr></table></figure><h3 id="2、TC限速设置"><a href="#2、TC限速设置" class="headerlink" title="2、TC限速设置"></a>2、TC限速设置</h3><p>假设现在有两块网卡<br>eth0: xx.xx.xx.xx（外网的上网地址）<br>eth1: 172.16.44.1（做为内网的网关）</p><h3 id="下载限速"><a href="#下载限速" class="headerlink" title="下载限速"></a>下载限速</h3><p>下载限速要在eth1上面做，判断数据包的目的地址来做限制。tc包括三部分：队列、类、过滤器。我使用了htb方式去限制速度，也可以使用cbq，但cbq配置比较复杂一点，而且据说性能没htb好。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#删除原来的tc规则队列</span></div><div class="line">/sbin/tc qdisc del dev eth1 root</div><div class="line"><span class="comment">#添加tc规则队列</span></div><div class="line">/sbin/tc qdisc add dev eth1 root handle 10: htb default 256</div><div class="line"><span class="comment">#生成根类</span></div><div class="line">/sbin/tc class add dev eth1 parent 10: classid 10:1 htb rate 100mbit ceil 100mbit</div><div class="line"><span class="comment">#支类列表用于限制速度</span></div><div class="line"><span class="comment">#这里的rate指的是保证带宽,ceil是最大带宽。</span></div><div class="line">/sbin/tc class add dev eth1 parent 10:1 classid 10:10 htb rate 400kbps ceil 400kbps prio 1</div><div class="line"> </div><div class="line"><span class="comment">#添加支类规则队列</span></div><div class="line"><span class="comment">#采用sfq伪随机队列，并且10秒重置一次散列函数。</span></div><div class="line">/sbin/tc qdisc add dev eth1 parent 10:10 handle 101: sfq perturb 10</div><div class="line"> </div><div class="line"><span class="comment">#建立网络包过滤器，设置fw。</span></div><div class="line">/sbin/tc filter add dev eth1 parent 10: protocol ip prio 10 handle 1 fw classid 10:10</div></pre></td></tr></table></figure><p>在iptables里面设定mark值，与上面的handle值对应</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iptables -t mangle -A POSTROUTING -d 172.16.44.130 -j MARK --<span class="built_in">set</span>-mark 1</div><div class="line">iptables -t mangle -A POSTROUTING -d 172.16.44.130 -j RETURN</div></pre></td></tr></table></figure><p>通过上面的代码就可以限制172.16.44.130这台机子的下载速度到400kbps。</p><p>需要注意的是：<br>1，172.16.44.130也可以写成网段的形式，例如172.16.44.0/24<br>2，这里的kbps实际上就是KB/S（每秒千字节），另一个单位是kbit，这个才是每秒千比特。</p><h3 id="上传限速"><a href="#上传限速" class="headerlink" title="上传限速"></a>上传限速</h3><p>上传限速的原理其实跟下载的差不多，只不过限制的网卡不同，要在eth0上过滤来源地址去限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#删除原来的tc规则队列</span></div><div class="line">tc qdisc del dev eth0 root</div><div class="line"> </div><div class="line"><span class="comment">#添加tc规则队列</span></div><div class="line">tc qdisc add dev eth0 root handle 20: htb default 256</div><div class="line"> </div><div class="line"><span class="comment">#生成根类</span></div><div class="line">tc class add dev eth0 parent 20: classid 20:1 htb rate 100mbit ceil 100mbit</div><div class="line"> </div><div class="line"><span class="comment">#支类列表用于限制速度</span></div><div class="line">tc class add dev eth0 parent 20:1 classid 20:10 htb rate 40kbps ceil 40kbps prio 1</div><div class="line"> </div><div class="line"><span class="comment">#添加支类规则队列</span></div><div class="line">tc qdisc add dev eth0 parent 20:10 handle 201: sfq perturb 10</div><div class="line"> </div><div class="line"><span class="comment">#建立网络包过滤器</span></div><div class="line">tc filter add dev eth0 parent 20: protocol ip prio 100 handle 2 fw classid 20:10</div><div class="line">iptables -t mangle -A PREROUTING -s 172.16.44.130 -j MARK --<span class="built_in">set</span>-mark 2</div><div class="line">iptables -t mangle -A PREROUTING -s 172.16.44.130 -j RETURN</div></pre></td></tr></table></figure><p>跟下载不同的是POSTROUTING要改成PREROUTING，-d改成-s。</p><p>本文转载：<br><a href="https://www.zhukun.net/archives/7401" target="_blank" rel="external">linux下使用iptables和tc限制速度</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;linux下使用iptables和tc限制速度的方法，记录一下。假设本地搭建了PPTPD服务，又或者有多个网卡，需要对其中一些接口做限速处理的情况，非常有用，本文基于CentOS 6.4 64bit。&lt;/p&gt;
&lt;h3 id=&quot;1、初始配置&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux快速搭建SSR Python版本</title>
    <link href="http://blog.xmxin.top/2017/06/27/Linux%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BASSR-Python%E7%89%88%E6%9C%AC/"/>
    <id>http://blog.xmxin.top/2017/06/27/Linux手动搭建SSR-Python版本/</id>
    <published>2017-06-27T08:23:02.000Z</published>
    <updated>2017-07-31T13:42:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家众所周知的ShadowSocksR，本文将介绍它的Python安装方法，以及多端口多用户的配置方法。</p><h3 id="1、更新yum源并安装依赖。"><a href="#1、更新yum源并安装依赖。" class="headerlink" title="1、更新yum源并安装依赖。"></a>1、更新yum源并安装依赖。</h3><p>CentOS:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum update -y &amp;&amp; yum install -y git python</div></pre></td></tr></table></figure><p>Ubuntu or Debian:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ apt-get update -y &amp;&amp; apt-get install -y git python</div></pre></td></tr></table></figure><h3 id="2、获取ShadowSocksR源码。"><a href="#2、获取ShadowSocksR源码。" class="headerlink" title="2、获取ShadowSocksR源码。"></a>2、获取ShadowSocksR源码。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/Shell-mirrors/shadowsocksr.git</div></pre></td></tr></table></figure><h3 id="3、配置user-config-json文件为单端口多用户。"><a href="#3、配置user-config-json文件为单端口多用户。" class="headerlink" title="3、配置user-config.json文件为单端口多用户。"></a>3、配置user-config.json文件为单端口多用户。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> shadowsocksr</div><div class="line">$ cp config.json user-config.json</div><div class="line">$ vi shadowsocksr/user-config.json  <span class="comment">#编辑user-config.json配置文件</span></div></pre></td></tr></table></figure><p>打开后配置文件为以下内容(简单的介绍下~):<br>温馨提示，打开文件后按小写的i即可对文件进行编辑!<br>保存退出则先按ESC退出编辑，再按一个英文冒号和wq即可保存并退出!<br>例如： :wq!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,</div><div class="line">    <span class="string">"server_ipv6"</span>: <span class="string">"::"</span>,</div><div class="line">    <span class="string">"server_port"</span>: 8388, //此为SSR的端口</div><div class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="string">"local_port"</span>: 1080, //此为本地端口</div><div class="line"></div><div class="line">    <span class="string">"password"</span>: <span class="string">"m"</span>, //此为SSR密码</div><div class="line">    <span class="string">"method"</span>: <span class="string">"aes-128-ctr"</span>, //此为加密方式</div><div class="line">    <span class="string">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>, //此为协议插件</div><div class="line">    <span class="string">"protocol_param"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"obfs"</span>: <span class="string">"tls1.2_ticket_auth_compatible"</span>, //此为混淆方式</div><div class="line">    <span class="string">"obfs_param"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"speed_limit_per_con"</span>: 0,</div><div class="line">    <span class="string">"speed_limit_per_user"</span>: 0,</div><div class="line"></div><div class="line">    <span class="string">"additional_ports"</span> : &#123;&#125;, // only works under multi-user mode</div><div class="line">    <span class="string">"additional_ports_only"</span> : <span class="literal">false</span>, // only works under multi-user mode</div><div class="line">    <span class="string">"timeout"</span>: 120,</div><div class="line">    <span class="string">"udp_timeout"</span>: 60,</div><div class="line">    <span class="string">"dns_ipv6"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"connect_verbose_info"</span>: 0,</div><div class="line">    <span class="string">"redirect"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"fast_open"</span>: <span class="literal">false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>以上步骤为单端口多用户配置方法，下面为多端口多用户配置方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> shadowsocksr</div><div class="line">$ vi user-config.json <span class="comment">#直接编辑一个user-config.json配置文件</span></div></pre></td></tr></table></figure><p>然后按上面的提示输入一个小写的i进行编辑，然后输入以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</div><div class="line">    <span class="string">"server_ipv6"</span>: <span class="string">"[::]"</span>,</div><div class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</div><div class="line">    <span class="string">"local_port"</span>:1080, //此为本地端口</div><div class="line">    <span class="string">"port_password"</span>:&#123;</div><div class="line">        <span class="string">"8080"</span>:<span class="string">"ShadowSocksR"</span> //此为SSR的端口和密码，前面的数字为端口后面则为密码，多个端口请用英文逗号<span class="string">','</span>隔开</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"timeout"</span>:300,</div><div class="line">    <span class="string">"method"</span>:<span class="string">"origin"</span>, //此为加密方式</div><div class="line">    <span class="string">"protocol"</span>: <span class="string">"auth_sha1_v4"</span>, //此为协议插件</div><div class="line">    <span class="string">"protocol_param"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"obfs"</span>: <span class="string">"http_simple_compatible"</span>, //此为混淆方式</div><div class="line">    <span class="string">"obfs_param"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"redirect"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"dns_ipv6"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"fast_open"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"workers"</span>: 1</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>到此配置user-config.json文件就结束了。</p><h3 id="4、启动-关闭-重启SSR"><a href="#4、启动-关闭-重启SSR" class="headerlink" title="4、启动 关闭 重启SSR"></a>4、启动 关闭 重启SSR</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> shadowsocksr/shadowsocks <span class="comment">#切换到shadowsocks目录</span></div><div class="line">$ python ./server.py -d start <span class="comment">#启动SSR</span></div><div class="line">$ python ./server.py -d stop <span class="comment">#关闭SSR</span></div><div class="line">$ python ./server.py -d restart <span class="comment">#重启SSR</span></div></pre></td></tr></table></figure><p>到此SSR安装就结束了!</p><h3 id="5、另外自写了个Python版的SSR一键脚本-看不懂或不会操作的可以用这个"><a href="#5、另外自写了个Python版的SSR一键脚本-看不懂或不会操作的可以用这个" class="headerlink" title="5、另外自写了个Python版的SSR一键脚本(看不懂或不会操作的可以用这个)"></a>5、另外自写了个Python版的SSR一键脚本(看不懂或不会操作的可以用这个)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget vpn.xmxin.top/ssr.sh;bash ssr.sh</div></pre></td></tr></table></figure><p>复制到ssh回车即可简单的设置并搭建SSR啦！</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;大家众所周知的ShadowSocksR，本文将介绍它的Python安装方法，以及多端口多用户的配置方法。&lt;/p&gt;
&lt;h3 id=&quot;1、更新yum源并安装依赖。&quot;&gt;&lt;a href=&quot;#1、更新yum源并安装依赖。&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.xmxin.top/2017/06/26/hello-world/"/>
    <id>http://blog.xmxin.top/2017/06/26/hello-world/</id>
    <published>2017-06-26T10:00:00.000Z</published>
    <updated>2017-09-21T08:18:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
